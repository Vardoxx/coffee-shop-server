generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  name     String
  password String

  workInterval   Int?    @default(50) @map("work_interval")
  breakInterval  Int?    @default(10) @map("break_interval")
  intervalsCount Int?    @default(7) @map("intervals_count")
  order          Order[]

  payment Payment[]

  @@map("user")
}

model Order {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  status       Status @default(Draft)
  deliveryTime Int?

  address   String
  totalCost Int

  item   Json[]
  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  payment   Payment? @relation(fields: [paymentId], references: [id])
  paymentId String?  @unique

  @@map("order")
}

model Position {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title        String  @unique
  description  String
  cost         Int
  srcImg       String
  type         String
  specialOffer Boolean @default(false)

  @@map("position")
}

model PositionCategory {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  value String @unique
}

model Payment {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  amount Float
  method PaymentMethod?
  status PaymentStatus  @default(PENDING)

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  order Order?

  @@map("payment")
}

enum Status {
  Draft
  Pending
  Canceled
  Completed
}

enum PaymentMethod {
  CARD
  BANK_TRANSFER
  CASH
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}
